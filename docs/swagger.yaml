definitions:
  controllers.CarInput:
    properties:
      brand_id:
        type: integer
      description:
        type: string
      image_car:
        type: string
      is_second:
        type: boolean
      name:
        type: string
      price:
        type: number
      type_id:
        type: integer
    required:
    - brand_id
    - name
    - price
    - type_id
    type: object
  models.BrandCar:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Car:
    properties:
      brand:
        $ref: '#/definitions/models.BrandCar'
      brand_id:
        type: integer
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      image_car:
        type: string
      is_second:
        type: boolean
      name:
        type: string
      price:
        type: number
      type:
        $ref: '#/definitions/models.TypeCar'
      type_id:
        type: integer
      updated_at:
        type: string
    type: object
  models.InputChangePassword:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    required:
    - new_password
    - old_password
    type: object
  models.Invoice:
    properties:
      created_at:
        type: string
      id:
        type: integer
      order_id:
        type: integer
      transaction_id:
        type: integer
      updated_at:
        type: string
    type: object
  models.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.Order:
    properties:
      car_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      order_image:
        type: string
      status:
        type: boolean
      total_price:
        type: number
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  models.Role:
    properties:
      created_at:
        type: string
      id:
        type: integer
      role_name:
        type: string
      updated_at:
        type: string
    type: object
  models.RoleRequest:
    properties:
      role_name:
        type: string
    type: object
  models.Transaction:
    properties:
      amount:
        type: number
      created_at:
        type: string
      id:
        type: integer
      no_rek:
        type: string
      order:
        $ref: '#/definitions/models.Order'
      order_id:
        type: integer
      payment_provider:
        type: string
      transaction_date:
        type: string
      updated_at:
        type: string
    type: object
  models.TypeCar:
    properties:
      cars:
        items:
          $ref: '#/definitions/models.Car'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  models.User:
    properties:
      address:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      phone_number:
        type: string
      role:
        $ref: '#/definitions/models.Role'
      role_id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/auth/change-password:
    post:
      description: Change Password User by token.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Change Password Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.InputChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: '{"message": "Password changed successfully"}'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: '{"error": "string"}'
          schema:
            additionalProperties: true
            type: object
        "401":
          description: '{"error": "string"}'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: '{"error": "string"}'
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: Change Password User by token.
      tags:
      - Auth
  /api/auth/login:
    post:
      description: Logging in to get jwt token to access admin or user api by roles.
      parameters:
      - description: the body to login a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login as as user.
      tags:
      - Auth
  /api/auth/me:
    get:
      description: Get Current User by token.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - BearerToken: []
      summary: Get Current User by token.
      tags:
      - Auth
  /api/auth/register:
    post:
      description: registering a user from public access.
      parameters:
      - description: the body to register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register a user.
      tags:
      - Auth
  /api/cms/brand-cars:
    get:
      description: Get a list of all brand cars
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.BrandCar'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all brand cars
      tags:
      - brand-cars
    post:
      consumes:
      - application/json
      description: Create a new brand car
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Brand Car object
        in: body
        name: brand_car
        required: true
        schema:
          $ref: '#/definitions/models.BrandCar'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BrandCar'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerToken: []
      summary: Create a new brand car
      tags:
      - brand-cars
  /api/cms/brand-cars/{id}:
    delete:
      description: Delete a specific brand car
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Brand Car ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerToken: []
      summary: Delete a brand car
      tags:
      - brand-cars
    get:
      description: Get details of a specific brand car
      parameters:
      - description: Brand Car ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BrandCar'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a brand car by ID
      tags:
      - brand-cars
    put:
      consumes:
      - application/json
      description: Update details of a specific brand car
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Brand Car ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Brand Car object
        in: body
        name: brand_car
        required: true
        schema:
          $ref: '#/definitions/models.BrandCar'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BrandCar'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerToken: []
      summary: Update a brand car
      tags:
      - brand-cars
  /api/cms/cars:
    get:
      description: Get a list of all cars with their types and brands
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Car'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all cars
      tags:
      - cars
    post:
      consumes:
      - application/json
      description: Create a new car
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Car object
        in: body
        name: car
        required: true
        schema:
          $ref: '#/definitions/controllers.CarInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Car'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerToken: []
      summary: Create a new car
      tags:
      - cars
  /api/cms/cars/{id}:
    delete:
      description: Delete a specific car
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Car ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerToken: []
      summary: Delete a car
      tags:
      - cars
    get:
      description: Get details of a specific car including its type and brand
      parameters:
      - description: Car ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Car'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a car by ID
      tags:
      - cars
    put:
      consumes:
      - application/json
      description: Update details of a specific car
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Car ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Car object
        in: body
        name: car
        required: true
        schema:
          $ref: '#/definitions/controllers.CarInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Car'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerToken: []
      summary: Update a car
      tags:
      - cars
  /api/cms/invoices:
    get:
      description: Get all invoices
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Invoice'
      summary: Get all invoices
      tags:
      - invoices
    post:
      consumes:
      - application/json
      description: Create new invoice
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Invoice Data
        in: body
        name: invoice
        required: true
        schema:
          $ref: '#/definitions/models.Invoice'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Invoice'
      summary: Create new invoice
      tags:
      - invoices
  /api/cms/invoices/{id}:
    delete:
      consumes:
      - application/json
      description: Delete invoice
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Invoice'
      summary: Delete invoice
      tags:
      - invoices
    get:
      description: Get invoice by id
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Invoice'
      summary: Get invoice by id
      tags:
      - invoices
    put:
      consumes:
      - application/json
      description: Update invoice
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: string
      - description: Invoice Data
        in: body
        name: invoice
        required: true
        schema:
          $ref: '#/definitions/models.Invoice'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Invoice'
      summary: Update invoice
      tags:
      - invoices
  /api/cms/orders:
    get:
      description: Get all orders
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      summary: Get all orders
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: Create new order
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Order Data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      summary: Create new order
      tags:
      - orders
  /api/cms/orders/{id}:
    delete:
      consumes:
      - application/json
      description: Delete order
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      summary: Delete order
      tags:
      - orders
    get:
      description: Get order by id
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      summary: Get order by id
      tags:
      - orders
    put:
      consumes:
      - application/json
      description: Update order
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Order Data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      summary: Update order
      tags:
      - orders
  /api/cms/roles:
    get:
      description: Get all roles for Admin
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Role'
      summary: Get all roles for Admin
      tags:
      - roles
    post:
      consumes:
      - application/json
      description: Create new role
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Role Data
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Role'
      summary: Create new role
      tags:
      - roles
  /api/cms/roles/{id}:
    delete:
      description: Delete role
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Role'
      summary: Delete role
      tags:
      - roles
    put:
      consumes:
      - application/json
      description: Update role
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: Role Data
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.RoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Role'
      summary: Update role
      tags:
      - roles
  /api/cms/transactions:
    get:
      description: Get all transactions
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
      summary: Get all transactions
      tags:
      - transactions
    post:
      consumes:
      - application/json
      description: Create new transaction
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Transaction Data
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/models.Transaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
      summary: Create new transaction
      tags:
      - transactions
  /api/cms/transactions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete transaction
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
      summary: Delete transaction
      tags:
      - transactions
    get:
      description: Get transaction by id
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
      summary: Get transaction by id
      tags:
      - transactions
    put:
      consumes:
      - application/json
      description: Update transaction
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      - description: Transaction Data
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/models.Transaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
      summary: Update transaction
      tags:
      - transactions
  /api/cms/type-cars:
    get:
      description: Get a list of all type cars
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TypeCar'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all type cars
      tags:
      - type-cars
    post:
      consumes:
      - application/json
      description: Create a new type car
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Type Car object
        in: body
        name: type_car
        required: true
        schema:
          $ref: '#/definitions/models.TypeCar'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.TypeCar'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerToken: []
      summary: Create a new type car
      tags:
      - type-cars
  /api/cms/type-cars/{id}:
    delete:
      description: Delete a specific type car
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Type Car ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerToken: []
      summary: Delete a type car
      tags:
      - type-cars
    get:
      description: Get details of a specific type car including associated cars
      parameters:
      - description: Type Car ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TypeCar'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a type car by ID
      tags:
      - type-cars
    put:
      consumes:
      - application/json
      description: Update details of a specific type car
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Type Car ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Type Car object
        in: body
        name: type_car
        required: true
        schema:
          $ref: '#/definitions/models.TypeCar'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TypeCar'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerToken: []
      summary: Update a type car
      tags:
      - type-cars
  /api/cms/user/profile/{id}:
    put:
      consumes:
      - application/json
      description: Update profile user or admin
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update profile user or admin
      tags:
      - users
  /api/cms/users:
    get:
      description: Get all users
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create new user
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Create new user
      tags:
      - users
  /api/cms/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Delete user
      tags:
      - users
    get:
      description: Get user by id
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get user by id
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update existing user by id (only admin)
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update existing user by id (only admin)
      tags:
      - users
  /roles/{id}:
    get:
      description: Get role by id
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Role'
      summary: Get role by id
      tags:
      - roles
swagger: "2.0"
